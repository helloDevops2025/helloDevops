# services:
#   mysql:
#     image: mysql:8.0
#     container_name: mysql
#     restart: unless-stopped
#     environment:
#       MYSQL_ROOT_PASSWORD: 1234
#       MYSQL_DATABASE: hellodevops
#       MYSQL_USER: user_devops
#       MYSQL_PASSWORD: user1234
#     ports:
#       - "3306:3306"   # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ MySQL ‡∏ä‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô "3307:3306"
#     volumes:
#       - db:/var/lib/mysql
#       - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
#     healthcheck:
#       test: ["CMD","mysqladmin","ping","-h","localhost","-p1234"]
#       interval: 10s
#       timeout: 5s
#       retries: 10

#   backend:
#     build:
#       context: ./backend
#       dockerfile: Dockerfile
#     container_name: backend
#     restart: unless-stopped
#     environment:
#       SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/hellodevops?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
#       SPRING_DATASOURCE_USERNAME: user_devops
#       SPRING_DATASOURCE_PASSWORD: user1234
#     ports:
#       - "8080:8080"
#     depends_on:
#       mysql:
#         condition: service_healthy

#   frontend:
#     build:
#       context: ./frontend
#     container_name: frontend
#     restart: unless-stopped
#     environment:
#       # VITE_API_URL: http://backend:8080   # ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç! ‡πÉ‡∏´‡πâ React ‡∏¢‡∏¥‡∏á API ‡πÉ‡∏ô network ‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ô
#       VITE_API_URL: http://localhost:8080
#     ports:
#       - "5173:5173"
#     depends_on:
#       - backend

# volumes:
#   db:
services:
  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: 1234
      MYSQL_DATABASE: hellodevops
      MYSQL_USER: user_devops
      MYSQL_PASSWORD: user1234
    ports:
      - "3307:3306"   # ‡∏ñ‡πâ‡∏≤‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏°‡∏µ MySQL ‡∏ä‡∏ô‡∏û‡∏≠‡∏£‡πå‡∏ï ‡πÉ‡∏´‡πâ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô "3307:3306"
    volumes:
      - db:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command:
      - --max_allowed_packet=32M
      - --innodb_log_file_size=128M
      - --innodb_file_per_table=1
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    healthcheck:
      test: ["CMD","mysqladmin","ping","-h","localhost","-p1234"]
      interval: 10s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ../helloDevops-backend
      dockerfile: Dockerfile
    container_name: backend
    restart: unless-stopped
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/hellodevops?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: user_devops
      SPRING_DATASOURCE_PASSWORD: user1234

      # üî¥ ‡πÄ‡∏û‡∏¥‡πà‡∏° 2 ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠ "‡∏õ‡∏¥‡∏î Flyway ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡πá‡∏î‡∏Ç‡∏≤‡∏î"
      SPRING_FLYWAY_ENABLED: "false"   # ‡∏õ‡∏¥‡∏î Flyway ‡∏î‡πâ‡∏ß‡∏¢‡∏™‡∏ß‡∏¥‡∏ä‡∏ï‡πå‡∏ï‡∏£‡∏á ‡πÜ
      SPRING_AUTOCONFIGURE_EXCLUDE: "org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration"  # ‡∏Å‡∏±‡∏ô Spring ‡πÑ‡∏°‡πà‡πÇ‡∏´‡∏•‡∏î auto-config ‡∏Ç‡∏≠‡∏á Flyway ‡πÄ‡∏•‡∏¢

    ports:
      - "8080:8080"
    depends_on:
      mysql:
        condition: service_healthy

  frontend:
    build:
      context: ./frontend
    container_name: frontend
    restart: unless-stopped
    environment:
      # ‡∏ñ‡πâ‡∏≤‡πÉ‡∏´‡πâ‡πÄ‡∏ö‡∏£‡∏≤‡∏ß‡πå‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏ú‡πà‡∏≤‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡πÄ‡∏£‡∏≤ ‡πÉ‡∏ä‡πâ localhost ‡πÑ‡∏î‡πâ (‡πÄ‡∏û‡∏£‡∏≤‡∏∞ backend ‡πÄ‡∏õ‡∏¥‡∏î‡∏û‡∏≠‡∏£‡πå‡∏ï 8080 ‡∏≠‡∏≠‡∏Å‡∏°‡∏≤)
      VITE_API_URL: http://localhost:8080
      # ‡∏ñ‡πâ‡∏≤‡∏à‡∏∞‡πÉ‡∏´‡πâ‡∏ß‡∏¥‡πà‡∏á‡πÉ‡∏ô‡πÄ‡∏Ñ‡∏£‡∏∑‡∏≠‡∏Ç‡πà‡∏≤‡∏¢ docker ‡∏†‡∏≤‡∏¢‡πÉ‡∏ô (‡πÄ‡∏ä‡πà‡∏ô SSR/‡∏ù‡∏±‡πà‡∏á‡πÄ‡∏ã‡∏¥‡∏£‡πå‡∏ü‡πÄ‡∏ß‡∏≠‡∏£‡πå), ‡πÉ‡∏ä‡πâ:
      # VITE_API_URL: http://backend:8080
    ports:
      - "5173:5173"
    depends_on:
      - backend

# ‡∏õ‡∏£‡∏∞‡∏Å‡∏≤‡∏® named volume "db" ‡πÄ‡∏õ‡πá‡∏ô mapping (‡∏´‡πâ‡∏≤‡∏°‡∏°‡∏µ '-')
volumes:
  db: {}


