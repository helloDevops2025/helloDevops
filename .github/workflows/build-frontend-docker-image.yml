name: Build Frontend Docker Image

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: sombun_db
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ✅ ต้อง login ก่อนจะ pull backend image
      - name: Login to Docker Hub
        run: echo dckr_pat_VJu4lYTGkJU9meYspQ3U2XkUjW4 | docker login -u u6687032 --password-stdin

      # ✅ ดึง backend image จาก Docker Hub
      - name: Pull backend image
        run: docker pull u6687032/hello-devops-backend:latest

      # ✅ รัน backend container manual แทน services
      - name: Run backend container
        run: |
          docker run -d --name backend-test \
            -p 8080:8080 \
            -e SPRING_DATASOURCE_URL=jdbc:mysql://host.docker.internal:3306/sombun_db \
            -e SPRING_DATASOURCE_USERNAME=root \
            -e SPRING_DATASOURCE_PASSWORD=root \
            u6687032/hello-devops-backend:latest

      # ✅ รอ backend พร้อม
      - name: Wait for backend
        run: npx wait-on http://localhost:8080/api/health

      # ✅ ติดตั้ง Node.js และเตรียม frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Clean npm cache
        run: npm cache clean --force

      - name: Install and Run dev test and E2E
        run: |
          cd ./frontend
          npm install
          npm run dev &               # รัน dev server แบบ background
          sleep 10                    # รอให้เซิร์ฟเวอร์ขึ้น
          curl -I http://localhost:5173 || true
          npx cypress run             # รัน E2E test
          pkill -f "vite"             # ปิด dev server

      - name: Build project
        working-directory: ./frontend
        run: npm run build

      - name: Build Docker image
        run: docker build -t hello-devops-frontend:latest ./frontend

      - name: Push image to Docker Hub
        if: success()
        run: |
          echo dckr_pat_VJu4lYTGkJU9meYspQ3U2XkUjW4 | docker login -u u6687032 --password-stdin
          docker tag hello-devops-frontend:latest u6687032/hello-devops-frontend:latest
          docker push u6687032/hello-devops-frontend:latest
