name: Build Frontend, Run Cypress Tests snd Deploy to Docker

on:
  push:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  e2e-test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: ecommerce
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping -h localhost -uroot -proot"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # ‚úÖ ‡∏£‡∏±‡∏ô MySQL readiness check
      - name: Wait for MySQL to be ready
        run: |
          echo "‚è≥ Waiting for MySQL..."
          for i in {1..10}; do
            if mysql -h 127.0.0.1 -uroot -proot -e "SELECT 1" >/dev/null 2>&1; then
              echo "‚úÖ MySQL is ready!"
              exit 0
            fi
            echo "‚ùå Retry ($i/10)..."
            sleep 5
          done
          exit 1
          
      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # ‚úÖ ‡∏î‡∏∂‡∏á backend ‡∏à‡∏≤‡∏Å Docker Hub
      - name: Pull backend image
        run: docker pull u6687032/hello-devops-backend:latest

      # ‚úÖ ‡∏£‡∏±‡∏ô backend container
      - name: Run backend container
        run: |
          docker run -d --name backend \
            -p 8080:8080 \
            -e SPRING_DATASOURCE_URL=jdbc:mysql://127.0.0.1:3306/testdb \
            -e SPRING_DATASOURCE_USERNAME=root \
            -e SPRING_DATASOURCE_PASSWORD=root \
            u6687032/hello-devops-backend:latest

      # ‚úÖ Install Node.js + dependencies
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install frontend dependencies
        working-directory: ./frontend
        run: |
          ls
          pwd
          npm install

      # # ‚úÖ Run Cypress tests (frontend + backend ‡∏û‡∏£‡πâ‡∏≠‡∏°)
      # - name: Run Cypress E2E tests
      #   uses: cypress-io/github-action@v6
      #   with:
      #     working-directory: ./frontend
      #     start: npm run dev
      #     wait-on: 'http://localhost:5173'
      #     browser: chrome
      #     headless: true

  # build:
  #  runs-on: ubuntu-latest
  #  needs: e2e-test
  #  steps:
  #     # ‚úÖ Build frontend for deploy
  #     - name: Build frontend
  #       working-directory: ./frontend
  #       run: npm run build
        
  Docker:
   runs-on: ubuntu-latest
   needs: e2e-test
   steps:
   
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Generate package-lock.json if missing
        working-directory: ./frontend
        run: |
          if [ ! -f package-lock.json ]; then
            npm install
          fi
      
      # ‡∏ï‡∏±‡πâ‡∏á tag ‡∏à‡∏≤‡∏Å commit SHA
      - name: Set build tag
        run: echo "TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV
        
      # # üê≥ Build Docker image ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö log
      # - name: Build Docker image
      #   run: |
      #     pwd
      #     ls
      #     cd frontend
      #     pwd
      #     ls
      #     docker build -t hello-devops-frontend:latest .

      # Build Docker image
      - name: Build Docker image
        run: |
          cd frontend
          docker build -t u6687032/hello-devops-frontend:${{ env.TAG }} .

      # üîê Login Docker Hub
      - name: Login to Docker Hub
        run: echo ${{ secrets.DOCKER_TOKEN }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # üì¶ Push image ‡πÅ‡∏•‡∏∞‡πÄ‡∏Å‡πá‡∏ö log
      - name: Push image to Docker Hub
        if: success()
        run: |
          echo "üöÄ Pushing image to Docker Hub..." 
          docker push u6687032/hello-devops-frontend:${{ env.TAG }}
          docker tag u6687032/hello-devops-frontend:${{ env.TAG }} u6687032/hello-devops-frontend:latest
          docker push u6687032/hello-devops-frontend:latest


